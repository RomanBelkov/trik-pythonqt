
# depending on your Qt configuration, you want to enable or disable
# one of the release/debug builds (if all three lines are commented,
# the default of your Qt installation will used)

# build with both debug and release mode
#CONFIG += debug_and_release build_all

# build with release mode only
#CONFIG += release

# build with debug mode only
#CONFIG += debug

# for all debug builds, add "_d" extension to target

!include (../../../global.pri)
QMAKE_CXXFLAGS -= -Werror=pedantic -pedantic-errors -Werror=write-strings
win32:QMAKE_CXXFLAGS -= -Werror=redundant-decls

#CONFIG(debug, debug|release) {
#  TARGET = $${TARGET}_d
#}

#warning(architecture is $$ARCHITECTURE)
#warning(flags are $$QMAKE_CXXFLAGS)

equals(ARCHITECTURE, "arm") {
  PYTHONQT_GENERATED_PATH = $$PWD/../arm-trik_generated_cpp_56/generated_cpp
} else {

  # Try files that are generated by the user:
  PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp

  !exists($$PYTHONQT_GENERATED_PATH) {
    # If no files are generated, try the checked-in wrappers:
    PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_$${QT_MAJOR_VERSION}$${QT_MINOR_VERSION}

    !exists($$PYTHONQT_GENERATED_PATH) {
      contains( QT_MAJOR_VERSION, 5 ) {
        contains( QT_MINOR_VERSION, 1 ) {
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_50
        }
        else:contains( QT_MINOR_VERSION, 2 ) {
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_50
        }
        else:contains( QT_MINOR_VERSION, 3 ) { 
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_53
        }
        else:contains( QT_MINOR_VERSION, 4 ) { 
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_54
        }
        else:contains( QT_MINOR_VERSION, 5 ) { 
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_54
        }
        else:contains( QT_MINOR_VERSION, 6 ) { 
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_56
        } else {
          PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_56
        }
      }
    }
  }
}

